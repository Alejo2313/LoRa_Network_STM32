/*
 * FreeModbus Libary: BARE Port
 * Copyright (C) 2006 Christian Walter <wolti@sil.at>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * File: $Id: port.h,v 1.1 2006/08/22 21:35:13 wolti Exp $
 */

#ifndef _PORT_H
#define _PORT_H

/*#include <assert.h>*/
/*#include <inttypes.h>*/
#include "stm32l432xx.h"
/* Scheduler includes. */
#include "FreeRTOS.h"
#include "task.h"
#include "queue.h"
#include "semphr.h"


#define	INLINE                      inline
#define PR_BEGIN_EXTERN_C           extern "C" {
#define	PR_END_EXTERN_C             }

/*extern void ENTER_CRITICAL_SECTION(void);    */
/**/
/*extern void EXIT_CRITICAL_SECTION(void);     */

/*#define ENTER_CRITICAL_SECTION( )   taskENTER_CRITICAL( )*/
/*#define EXIT_CRITICAL_SECTION ( )   taskEXIT_CRITICAL ( )*/

#define ENTER_CRITICAL_SECTION( )   vMBPortEnterCritical()
#define EXIT_CRITICAL_SECTION( )    vMBPortExitCritical()

#define assert( x )

typedef uint8_t BOOL;

typedef uint8_t		UCHAR;
typedef int8_t 		CHAR;

typedef uint16_t 	USHORT;
typedef int16_t 	SHORT;

typedef uint32_t 	ULONG;
typedef int32_t 	LONG;

#ifndef TRUE
#define TRUE            1
#endif

#ifndef FALSE
#define FALSE           0
#endif

#ifndef MODBUS_TIMER_ISR_PRIORITY
#define MODBUS_TIMER_ISR_PRIORITY			15 //Prioridad de la interrupcion 15 es la mas baja, 0 la mas alta
#endif

#define MB_PORT_HAS_CLOSE                     1
#define MB_ASCII_TIMEOUT_WAIT_BEFORE_SEND_MS    2

/* ----------------------- Prototypes ---------------------------------------*/
void            vMBPortSetWithinException( BOOL bInException );
BOOL            bMBPortIsWithinException( void );

void            vMBPortEnterCritical( void );
void            vMBPortExitCritical( void );

//Errores de compilacion
#if MODBUS_TIMER_ISR_PRIORITY < (configMAX_SYSCALL_INTERRUPT_PRIORITY >> 5)
	#error "SERIE_ISR_PRIORITY no puede tener mas prioridad que configMAX_SYSCALL_INTERRUPT_PRIORITY al usar funciones del SO"
#endif

#endif
